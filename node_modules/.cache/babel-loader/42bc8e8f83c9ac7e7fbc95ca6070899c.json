{"ast":null,"code":"import _objectSpread from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jordan/Desktop/reactForms/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jordan/Desktop/reactForms/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Formik, Form, ErrorMessage, Field, FieldArray, arrayHelpers } from 'formik';\nimport * as yup from 'yup';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      test: 'hello',\n      attempt: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var test = function test() {\n        return console.log('test');\n      };\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          comment: '',\n          list: [{\n            name: 'one',\n            checked: false\n          }, {\n            name: 'two',\n            checked: false\n          }, {\n            name: 'three',\n            checked: false\n          }]\n        },\n        validate: function validate(values) {\n          var errors = {};\n          console.log(values);\n          errors.list = values.list.some(function (element) {\n            return element.checked;\n          }) ? null : 'must select at least one from list';\n          return errors;\n        },\n        validateOnBlur: false,\n        validateOnChange: false,\n        validationSchema: yup.object().shape({\n          email: yup.string().email('not a valid email').required('must be entered'),\n          comment: yup.string().min(4, 'must be 4 chars').required('must be entered')\n        }),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        handleChange: function handleChange() {\n          return console.log('handle change');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, function (_ref2) {\n        var isSubmitting = _ref2.isSubmitting,\n            dirty = _ref2.dirty,\n            values = _ref2.values;\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email please\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"comment\",\n          name: \"comment\",\n          placeholder: \"comment please\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"comment\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(FieldArray, {\n          name: \"list\",\n          render: function render(arrayHelpers) {\n            return React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, values.list.map(function (value, index) {\n              return React.createElement(\"div\", {\n                key: value.name,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              }, \" \", value.name, React.createElement(\"input\", {\n                key: value.name,\n                type: \"checkbox\",\n                name: value.name,\n                checked: value.checked,\n                onChange: function onChange() {\n                  return arrayHelpers.replace(index, _objectSpread({}, value, {\n                    checked: !values.list[index].checked\n                  }));\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76\n                },\n                __self: this\n              }));\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"list\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"go\",\n          disabled: isSubmitting || !dirty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Submit\"));\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Jordan/Desktop/reactForms/src/App.js"],"names":["React","Component","Formik","Form","ErrorMessage","Field","FieldArray","arrayHelpers","yup","App","state","test","attempt","console","log","email","comment","list","name","checked","values","errors","some","element","object","shape","string","required","min","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","dirty","map","value","index","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport { Formik, Form, ErrorMessage, Field, FieldArray, arrayHelpers } from 'formik';\nimport * as yup from 'yup';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      test: 'hello',\n      attempt: false\n    };\n  }\n\n\n  render() {\n    const test = () => console.log('test')\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Formik\n            initialValues={\n              {\n                email: '',\n                comment: '',\n                list: [\n                  { name: 'one', checked: false, },\n                  { name: 'two', checked: false },\n                  { name: 'three', checked: false }\n                ]\n              }\n            }\n            validate={(values => {\n              let errors = {};\n              console.log(values)\n              errors.list = values.list.some(element =>\n                element.checked\n              ) ? null : 'must select at least one from list'\n              return errors;\n            })}\n            validateOnBlur={false}\n            validateOnChange={false}\n            validationSchema={\n              yup.object().shape({\n                email: yup.string()\n                  .email('not a valid email')\n                  .required('must be entered'),\n                comment: yup.string().min(4, 'must be 4 chars').required('must be entered')\n              })\n            }\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                setSubmitting(false);\n              }, 400);\n            }}\n            handleChange={() => console.log('handle change')}\n          >\n            {({ isSubmitting, dirty, values }) => (\n              <Form>\n                <Field type=\"email\" name=\"email\" placeholder=\"email please\" />\n                <ErrorMessage name=\"email\" component=\"div\" />\n\n                <Field type=\"comment\" name=\"comment\" placeholder=\"comment please\" />\n                \n                <ErrorMessage name=\"comment\" component=\"div\" />\n\n                <FieldArray name=\"list\"\n                  render={arrayHelpers => (\n                    <React.Fragment>\n                      {values.list.map((value, index) => {\n                        return (\n                          <div key={value.name}> {value.name}\n                            <input\n                              key={value.name}\n                              type='checkbox'\n                              name={value.name}\n                              checked={value.checked}\n                              onChange={() =>\n                                arrayHelpers\n                                  .replace(index,\n                                    {\n                                      ...value,\n                                      checked: !values.list[index].checked\n                                    })}\n                            />\n                          </div>\n                        )\n                      })}\n                    </React.Fragment>\n\n                  )} />\n                <ErrorMessage name=\"list\" component=\"div\" />\n                <button type=\"go\" disabled={isSubmitting || !dirty}>\n                  Submit\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}